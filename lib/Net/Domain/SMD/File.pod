=encoding utf8

=head1 NAME

Net::Domain::SMD::File - Info from one SMD file

=head1 SYNOPSIS

  # end-user route to collect the info
  my $tmch  = Net::Domain::TMCH->new(%options);
  my $smdf  = $tmch->smd($filename);

  # use by TMCH internally
  my $smd  = Net::Domain::SMD->new(%options);
  my $smdf = $smd->read($fn);

=head1 DESCRIPTION

Draft RFC L<http://tools.ietf.org/html/draft-lozano-tmch-func-spec-06>
SMD information is packaged.  This object represents one file in wrapped
format.

=head1 METHODS

=head2 Constructors

=over 4

=item Net::Domain::SMD::File-E<gt>B<fromFile>(FILENAME, OPTIONS)

 -Option --Default
  schemas  <required>

=over 2

=item schemas => SCHEMAS

=back

=item Net::Domain::SMD::File-E<gt>B<new>(OPTIONS)

 -Option  --Default
  filename  <required>

=over 2

=item filename => FILENAME

=back

=back

=head2 Attributes

=over 4

=item $obj-E<gt>B<filename>()

=item $obj-E<gt>B<labels>()

Returns a list of u-labels.

=item $obj-E<gt>B<marks>()

Returns the marks named in the "Marks" field.  The name insinuates that
this field may contains multiple values, but the format of this field
is not described in the spec.

=item $obj-E<gt>B<payload>()

Returns the XML::LibXML::Document contained in the file.

=back

=head2 File header access

The SMD-file contains a header, wrapping the XML content.  The next
methods provide access to that header information.

=over 4

=item $obj-E<gt>B<from>()

Returns the timestamp reflecting the 'notBefore' field.

=item $obj-E<gt>B<fromTime>()

The value of L<from()|Net::Domain::SMD::File/"File header access"> converted into seconds from epoc.

=item $obj-E<gt>B<smdID>()

=item $obj-E<gt>B<until>()

Returns the timestamp reflecting the 'notAfter' field.

=item $obj-E<gt>B<untilTime>()

The value of L<until()|Net::Domain::SMD::File/"File header access"> converted into seconds from epoc.

=back

=head2 XML content access

The following methods try to be smart, to hide complexities in the XML
structure, simplifying the main program.

=over 4

=item $obj-E<gt>B<certificates>(OPTIONS)

Returns the certificates as contained in the SMD file.

 -Option--Default
  issuer  <any issuer>

=over 2

=item issuer => NAME

=back

=item $obj-E<gt>B<courts>()

Returns a list of HASHes, each representing one court.
See F<examples/mark-templ.pl>

example: 

  foreach my $court ($smd->courts)
  {   print $court->{courtName}, "\n";
      print Dumper $court;
  }

=item $obj-E<gt>B<trademarks>()

Returns a list of HASHes, each representing one trademark.
See F<examples/mark-templ.pl>

example: 

  foreach my $trademark ($smd->trademarks)
  {   print $trademark->{markName}, "\n";
      my $holders = $trademark->{holder} || [];
      foreach my $holder (@$holders)
      {  print "Holder: $holder->{name}\n";
      }
  }

=item $obj-E<gt>B<treaties>()

Returns a list of HASHes, each representing one treaty or statute (one
element of type "treatyOrStatute".  See F<examples/mark-templ.pl>

=back

=head2 Helpers

=over 4

=item $obj-E<gt>B<date2time>(STRING)

Converts a time string into a time stamp (since epoch).

=back

=head1 SEE ALSO

This module is part of Net-Domain-TMCH distribution version 0.12,
built on October 14, 2013.  Development was supported by NIC.at, the Austrian
Domainname Registry.

 Website: F<http://perl.overmeer.net/net-domain-tmch/>

The documentation and interface style is consistent with a large set of
modules, belonging to the L<XML::Compile> suite.

=head1 LICENSE

Copyrights 2013 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

